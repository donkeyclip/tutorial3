/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

import Group from '../Group';
import ContextAwareIncident from './ContextAwareIncident';

class AnimatedAttributesSplitter extends Group {
  constructor(descriptiveIncident, contextData, mcid, selector, data) {
    super({}, { id: `${descriptiveIncident.id}_${mcid}` });
    this.mcid = mcid;
    this.selector = selector;
    this.data = data;
    this.setUp(descriptiveIncident, contextData);
  }

  setUp(descriptiveIncident, contextData) {
    for (const attr in this.data.attrs.animatedAttrs) {
      const singleAnimatedAttrs = {};
      singleAnimatedAttrs[attr] = this.data.attrs.animatedAttrs[attr];
      const attrsToPass = {
        ...this.data.attrs,
        animatedAttrs: singleAnimatedAttrs,
      };

      const propsToPass = {
        ...this.data.props,
        selector: this.selector,
      };

      const constructionIngredients = {
        incidentId: descriptiveIncident.id,
        attrs: attrsToPass,
        props: propsToPass,
        Incident: descriptiveIncident.constructor.Incident,
        plugin_npm_name: descriptiveIncident.constructor.plugin_npm_name,
        Channel: descriptiveIncident.constructor.Channel,
        DescriptiveIncident: descriptiveIncident,
      };

      const contextAwareIncident = new ContextAwareIncident(
        constructionIngredients,
        contextData,
        this.mcid,
        attr,
      );
      this.addChild(contextAwareIncident, 0);
    }
  }
}

export default AnimatedAttributesSplitter;
