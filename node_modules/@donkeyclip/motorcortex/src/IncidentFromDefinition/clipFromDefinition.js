/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

import { hasOwnProp } from '../_coreUtils/helper';

/**
 *
 * Clip from definition takes a definition object and returns a full Descriptive
 * Representation / creation of the Clip. As soon as the Clip is hosted, immediately
 * the real Clip will also be rendered.
 *
 * definition: {
 *     Class: <The Class>,
 *     attrs: <attrs>,
 *     props: <props>,
 *     incidents: { // this exists only in the case of a Group or a Clip
 *         <id>:{
 *           id: <id>,
 *           position> <position>,
 *           leaf: <definition>
 *         },
 *         ...
 *     }
 * }
 */
function constructIncident(definition) {
  const TheIncident = new definition.Class(definition.attrs, definition.props);
  if (TheIncident.result === false) {
    return TheIncident;
  }
  if (hasOwnProp(definition, 'incidents')) {
    for (const key in definition.incidents) {
      const incidentDefinition = definition.incidents[key];
      const incident = constructIncident(incidentDefinition.leaf);
      if (incident.result === false) {
        return incident;
      }
      const additionResult = TheIncident.addIncident(
        incident,
        incidentDefinition.position,
      );
      if (additionResult.result === false) {
        return additionResult;
      }
    }
  }
  return TheIncident;
}

export default constructIncident;
