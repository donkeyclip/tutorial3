import { HTMLClip, Group } from '../../main';
import DI from '../DescriptiveIncident';

let myClip;

const di1 = new DI(
  {
    animatedAttrs: { alpha: 2 },
  },
  {
    duration: 1000,
    id: 'desc-inc-1',
    selector: '.my-class',
  },
);

const di2 = new DI(
  {
    animatedAttrs: { alpha: 2 },
  },
  {
    duration: 1000,
    id: 'desc-inc-2',
    selector: '.my-class',
  },
);

const di3 = new DI(
  {
    animatedAttrs: { alpha: 2 },
  },
  {
    duration: 1000,
    id: 'desc-inc-2',
    selector: '.class-2',
  },
);

const casi = new HTMLClip({
  html: `
            <div id="my-root-div-2">
                <div id="element-1" class="my-class" data-motorcortex2-id="my-class-1"></div>
                <div id="element-2" class="my-class" data-motorcortex2-id="my-class-2"></div>
            </div>`,
  css: `
            #my-root-div {
                width: 800px;
                height: 400px;
            }
            .my-class {
                display: inline-block;
                width: 50%;
                height: 100%;
            }
        `,
  selector: '.clip-host',
  id: 'casi',
});

test('Check getElements from Incident belonging on the root Clip', () => {
  document.body.innerHTML = '<div id="clip-container"></div>';

  myClip = new HTMLClip({
    html: `
            <div id="my-root-div">
                <div id="element-1" class="my-class class-2" data-motorcortex2-id="my-class-1"></div>
                <div class="group">
                    <div class="class-2"></div>
                </div>
                <div id="element-2" class="my-class" data-motorcortex2-id="my-class-2"></div>
                <div id="element-3" class="class-1" data-motorcortex2-id="class-1"></div>
                <div class="clip-host" data-motorcortex2-id="clip-host-1"></div>
                <div class="clip-host" data-motorcortex2-id="clip-host-2"></div>
            </div>`,
    css: `
            #my-root-div {
                width: 800px;
                height: 400px;
            }
            .my-class {
                display: inline-block;
                width: 50%;
                height: 100%;
            }
        `,
    host: document.querySelector('#clip-container'),
    id: 'my-clip',
  });

  myClip.addIncident(di1, 1000);

  const elements = di1.getElements();
  expect(elements.length).toBe(2);
});

test('Check getElements from Incident that does not belong on a Clip', () => {
  const elements = di2.getElements();
  expect(elements).toEqual([]);
});

test("Check that incidents belonging to CaSIs return the full number of clip copies' elements", () => {
  myClip.addIncident(casi, 0);

  casi.addIncident(di2, 0);
  const elements = di2.getElements();
  expect(elements.length).toBe(4);
});

test('Check that an Incident with inherited selector, belonging on a Clip returns the right number of elements', () => {
  const group = new Group({
    selector: '.group',
  });

  group.addIncident(di3, 1000);
  myClip.addIncident(group, 1000);
  const elements = di3.getElements();
  expect(elements.length).toBe(1);
});

test('Check that a root / hosted Clip returns its host on getElements', () => {
  const elements = myClip.getElements();
  expect(elements.length).toBe(1);
});

test('Check that a CAsI returns its hosts on getElements', () => {
  const elements = casi.getElements();
  expect(elements.length).toBe(2);
});
