import * as MotorCortex from '../../main';
const DC = MotorCortex.HTMLClip;

let myClip;

test(`tmpl.01 Creating a Clip using our template engine should result to a json exportable clip`, () => {
  document.body.innerHTML = `<div id="clip-container"></div>`;

  myClip = new DC({
    html: `
        <div class="{{ initParams.containerClass }}">
            <div mc-if="initParams.boolTrue" id="shouldBeRendered">Should-be-rendered</div>
            <div mc-if="initParams.boolFalse" id="shouldNotBeRendered">Should not be rendered</div>
            <div mc-for="key,item" mc-of="initParams.items" class="item">{{ item }}</div>
        </div>
    `,
    css: `
            #my-root-div {
                width: {{ initParams.width }};
                height: 400px;
            }
            .my-class {
                width: {{ initParams.width }}};
                display: inline-block;
                width: 50%;
                height: 100%;
            }
        `,
    host: document.querySelector('#clip-container'),
    id: 'my-clip',
    initParams: {
      containerClass: 'my-class',
      boolTrue: true,
      boolFalse: false,
      items: ['item1', 'item2', 'item3'],
      width: '600px',
    },
    containerParams: {
      width: '500px',
      height: '500px',
    },
  });
}); // TODO remove this test, is no longer used

test(`tmpl.02 Creating a Clip using our template engine should render the expected html`, () => {
  expect(
    myClip.realClip.context.rootElement.innerHTML
      .replace(/(\r\n|\n|\r)/gm, '')
      .replace(/ /g, ''),
  ).toBe(
    `<div class="my-class">
                    <div id="shouldBeRendered">Should-be-rendered</div>
                    <div class="item">item1</div>
                    <div class="item">item2</div>
                    <div class="item">item3</div>
            </div>`
      .replace(/(\r\n|\n|\r)/gm, '')
      .replace(/ /g, ''),
  );
});

/**** broken from jest 24 to 25 ****/
test('tmpl.03 Creating a Clip using out template engine should apply CSS properly', () => {
  console.warn('TODO, check and restore test');
  //   expect(myClip.realClip.ownContext.window.
  //         getComputedStyle(
  //             myClip.realClip.ownContext.getElements('.my-class')[0]
  //         ).getPropertyValue('width')).toBe('50%');
});

/**** broken from jest 24 to 25 ****/
test('tmpl.04 Creating a Clip using CSS as function should apply CSS properly', () => {
  console.warn('TODO, check and restore test');
  //   expect(myJSXClip.realClip.context.window.
  //         getComputedStyle(
  //             myJSXClip.realClip.context.getElements('.my-class')[0]
  //         ).getPropertyValue('width')).toBe('50%');
});
