/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

import validator from './index';
import helper from '../helper';

/**
 * validateObject function takes as input a schema (compatible with fastest-validator) and an object and
 * checks if the provided props match the schema
 *
 * @param {object} schema
 * @param {object} props
 * @param {string} errorMsg
 * @returns {{result: boolean, errors: *}|{result: boolean}|{result: boolean, errors: [string]}}
 */
export function validateObject(
  schema,
  props,
  errorMsg = 'Error on validation',
) {
  try {
    const check = validator.compile(schema);
    const validationCheckResult = check(props);
    if (validationCheckResult === true) {
      return { result: true };
    }
    let errorMessage = `${errorMsg}:`;
    for (let i = 0; i < validationCheckResult.length; i++) {
      errorMessage += `\n - ${validationCheckResult[i].message}. ${validationCheckResult[i].actual} provided`;
    }
    helper.error(errorMessage);
    return {
      result: false,
      errors: validationCheckResult,
    };
  } catch (e) {
    const error = `${errorMsg}. Invalid schema provided`;
    helper.error(error);
    return {
      result: false,
      errors: [error],
    };
  }
}
