/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

import conf from './conf';
import { extractParenthesisAttrsAsArray, removeWhitespace } from '../../helper';
import { isNumeric } from '../../helper';

const patternRegexp = new RegExp(
  `^@${conf.preface}\\(( *#*[_A-z0-9.%-]+?( *, *#*[_A-z0-9.%-]+)*?)\\)$`,
);

function validate(expression, logError, checkValues, schema) {
  if (!patternRegexp.test(removeWhitespace(expression))) {
    logError(`The ${conf.preface} expression is not valid`);
    return false;
  }

  const patternValues = extractParenthesisAttrsAsArray(expression);
  if (schema.type === 'number') {
    for (let i = 0; i < patternValues.length; i++) {
      if (!isNumeric(patternValues[i])) {
        logError(`The @pattern value at index ${i} is not numeric`);
        return false;
      }
      patternValues[i] = parseFloat(patternValues[i]);
    }
  }

  return checkValues(patternValues);
}

export default validate;
