/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

import MonoIncident from '../../RealIncidents/MonoIncident';
import getMatrix2D from '../ExtendableCSSEffect/matrix2d';
import compoAttributes from '../InternalDescriptiveCSSPlugin/compoAttributes';
import { hasOwnProp } from '../../_coreUtils/helper';

export default class ExtendableCSSEffect extends MonoIncident {
  constructor(attrs = {}, props = {}, dna) {
    super(attrs, props, dna);
    this.compoAttributes = compoAttributes;
  }

  getScratchValue() {
    let toSearch = this.attributeKey;
    if (toSearch === 'cssOffset') {
      toSearch = 'offset';
    }
    if (toSearch !== 'transform') {
      const val = this.context.window.getComputedStyle(this.element)[toSearch];
      return val !== undefined && val !== '' ? val : 0;
    }

    const obj = {};
    const transform = this.compoAttributes[toSearch];
    const currentTransform = getMatrix2D(this.context.window, this.element);

    const computedStyle = this.context.window.getComputedStyle(this.element);
    let currentTransformProperty;
    for (let i = 0; i < transform.length; i++) {
      currentTransformProperty = transform[i];
      obj[currentTransformProperty] = hasOwnProp(
        currentTransform,
        currentTransformProperty,
      )
        ? currentTransform[currentTransformProperty]
        : computedStyle[currentTransformProperty];
    }

    return obj;
  }
}
