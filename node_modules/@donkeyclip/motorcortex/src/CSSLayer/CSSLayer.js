/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

import { loadPlugin } from '../_coreUtils/pluginLoader';
import InternalCSSPlugin from './InternalDescriptiveCSSPlugin/index';

// the plugin initially gets loaded as defined on the core / internal plugin via Web Animations API
const CSSLayer = loadPlugin(InternalCSSPlugin);
// AlternativeCore is a variable that aims to hold any alternative core preference. Initially null
let AlternativeCore = null;

// a method that accepts an Incident to act as the alternative CSS core implementation
export function setCore(Effect) {
  AlternativeCore = Effect;
}

export class CSSEffect {
  static targetClass = CSSLayer.CSSEffect.targetClass;

  constructor(attrs, props) {
    const res = new CSSLayer.CSSEffect(attrs, props);
    if (res.result === false) {
      return res;
    }
    if (AlternativeCore !== null) {
      // the static param "Incident" of the DescriptiveIncident instance is the one that will be
      // used on the real Incident implementation. Changing this changes the core of our CSS Engine
      res.constructor.Incident = AlternativeCore;
    }
    return res;
  }
}
